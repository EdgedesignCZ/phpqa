name: PHPQA CI

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  phpqa:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [5.4, 5.5, 5.6, 7.0, 7.1, 7.2, 7.3, 7.4, 8.0]
        stability: [prefer-stable]

    steps:
    - uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: xsl
        coverage: none
        # TODO: ? https://github.com/EdgedesignCZ/phpqa/runs/1813676801?check_suite_focus=true#step:6:28 ?
        tools: composer:v1

    - name: Cache composer
      uses: actions/cache@v2
      with:
        path: |
            ~/.composer/cache
            vendor
        key: php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: "php-${{ matrix.php }}-composer-"

    - name: Install dependencies
      env:
        CI_PHP_VERSION: ${{ matrix.php }}
      run: |
        if [[ ${CI_PHP_VERSION:0:1} == "8" ]]; then
            composer install --no-interaction --no-progress --ignore-platform-reqs
        else
            composer install --no-interaction --no-progress
        fi
        if [[ ${CI_PHP_VERSION:0:3} == "7.1" ]]; then
            # 1) delete sebastian dependency hell
            composer remove phpunit/phpunit --dev --no-interaction && composer remove sebastian/phpcpd --no-interaction;
            # 2) update tools
            composer update;
            # 3) reinstall sebastian...
            composer require phpunit/phpunit:~7.0 --dev && composer require sebastian/phpcpd;
            # 4) install suggested tools
            bin/suggested-tools.sh install;
        fi
        if [ ${CI_PHP_VERSION:0:3} == "7.4" ] || [ ${CI_PHP_VERSION:0:1} == "8" ]; then
            # 1) delete sebastian dependency hell
            composer remove phpunit/phpunit --dev --no-interaction && composer remove sebastian/phpcpd --no-interaction;
            # 2) update tools
            composer update;
            # 3) reinstall latest versions TODO: phpcpd v6
            composer require phpunit/phpunit --dev;
            # 4) install suggested tools
            bin/suggested-tools.sh install;
            # 5) fix new php versions
            php tests/.phpunit/fix-typehints.php
        fi
        # test installing suggested tools like docker image
        if [[ ${CI_PHP_VERSION:0:3} == "7.2" ]]; then
            bin/suggested-tools.sh install --prefer-dist;
        fi
        echo
        composer outdated --direct --all

    - name: Run tests
      env:
        CI_PHP_VERSION: ${{ matrix.php }}
      run: |
        vendor/phpunit/phpunit/phpunit
        if [[ ${CI_PHP_VERSION:0:3} == "7.4" ]]; then
            ./phpqa tools
            # TODO: revert when phpcpd v6 is supported
            ./phpqa --config tests/.ci --tools "phpmetrics:0,phploc,phpcs:0,php-cs-fixer,phpmd:0,pdepend,phpcpd,phpstan,phpunit:0,psalm,security-checker,parallel-lint:0"
        elif [[ ${CI_PHP_VERSION:0:3} == "8" ]]; then
            # TODO: enable phpqa when robo v2 is supported
            mkdir -p build
        else
            ./phpqa tools
            bin/ci.sh
        fi
        ls -lAh build

    - name: Upload QA files
      uses: actions/upload-artifact@v2
      with:
        name: phpqa-${{ matrix.php }}
        path: build

# DEPRECATED TRAVIS
#deploy:
#  - provider: script
#    script: .docker/build-image
#    skip_cleanup: false
#    on:
#      all_branches: true
#      php: 7.2
